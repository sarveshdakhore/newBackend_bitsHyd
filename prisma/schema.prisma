generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DB_URL")
  extensions = [uuid_ossp(map: "uuid-ossp", schema: "extensions"), vector(schema: "extensions")]
}

model User {
  id              Int              @id @default(autoincrement())
  email           String           @unique
  name            String?
  verified        Boolean          @default(false)
  token_v         Int              @default(0)
  additional_info Json?
  roleId          Int?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  otp             Otp[]
  password        Password?
  formSubmissions FormSubmission[]
  role            Role?            @relation(fields: [roleId], references: [id])

  @@map("users")
}

model Password {
  userId   Int    @unique
  password String
  salt     String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Otp {
  id        Int      @id @default(autoincrement())
  userId    Int
  otp       String
  expiresAt DateTime
  type      String   @default("login")
  salt      String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]

  @@map("roles")
}

model FormField {
  id          Int               @id @default(autoincrement())
  label       String            @unique
  description String?
  fieldType   FieldType         @default(TEXT)
  isRequired  Boolean           @default(false)
  validations Json?
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  forms       FormFieldOnForm[]
  formValues  FormValue[]

  @@map("formfields")
}

model Form {
  id          Int                   @id @default(autoincrement())
  title       String
  description String?
  embeddings  Unsupported("vector")
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @updatedAt
  fields      FormFieldOnForm[]
  submissions FormSubmission[]

  @@map("forms")
}

model FormFieldOnForm {
  id        Int       @id @default(autoincrement())
  formId    Int
  fieldId   Int
  order     Int       @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  formField FormField @relation(fields: [fieldId], references: [id])
  form      Form      @relation(fields: [formId], references: [id])

  @@unique([formId, fieldId])
  @@map("form_field_on_form")
}

model FormSubmission {
  id        Int              @id @default(autoincrement())
  formId    Int
  userId    Int
  status    SubmissionStatus @default(DRAFT)
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  form      Form             @relation(fields: [formId], references: [id])
  user      User             @relation(fields: [userId], references: [id])
  values    FormValue[]

  @@map("form_submissions")
}

model FormValue {
  id           Int            @id @default(autoincrement())
  submissionId Int
  fieldId      Int
  value        String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  field        FormField      @relation(fields: [fieldId], references: [id])
  submission   FormSubmission @relation(fields: [submissionId], references: [id])

  @@unique([submissionId, fieldId])
  @@map("form_values")
}

enum FieldType {
  TEXT
  NUMBER
  EMAIL
  DATE
  CHECKBOX
  SELECT
  MULTISELECT
  FILE
  TEXTAREA
}

enum SubmissionStatus {
  DRAFT
  SUBMITTED
  APPROVED
  REJECTED
}
